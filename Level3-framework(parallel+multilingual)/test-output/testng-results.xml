<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" ignored="1" total="5" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="33937" started-at="2020-04-04T17:10:01 IST" finished-at="2020-04-04T17:10:35 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="33937" started-at="2020-04-04T17:10:01 IST" finished-at="2020-04-04T17:10:35 IST">
      <class name="framework.testcases.Login">
        <test-method status="PASS" signature="getExcelName()[pri:0, instance:framework.testcases.Login@32c52b]" name="getExcelName" is-config="true" duration-ms="0" started-at="2020-04-04T17:10:01 IST" finished-at="2020-04-04T17:10:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getExcelName -->
        <test-method status="PASS" signature="BeforeMeth(java.lang.String)[pri:0, instance:framework.testcases.Login@32c52b]" name="BeforeMeth" is-config="true" duration-ms="7313" started-at="2020-04-04T17:10:19 IST" finished-at="2020-04-04T17:10:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://leaftaps.com/opentaps/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMeth -->
        <test-method status="FAIL" signature="executeCreateLead(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:framework.testcases.Login@32c52b]" name="executeCreateLead" duration-ms="5" started-at="2020-04-04T17:10:26 IST" data-provider="getData" finished-at="2020-04-04T17:10:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[DemoCSR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[crmsfa]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[TestLeaf]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sarath]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Ms]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at framework.pages.LoginPage.enterUsername(LoginPage.java:15)
at framework.testcases.Login.executeCreateLead(Login.java:20)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeCreateLead -->
        <test-method status="PASS" signature="AfterMeth()[pri:0, instance:framework.testcases.Login@32c52b]" name="AfterMeth" is-config="true" duration-ms="271" started-at="2020-04-04T17:10:26 IST" finished-at="2020-04-04T17:10:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMeth -->
        <test-method status="PASS" signature="BeforeMeth(java.lang.String)[pri:0, instance:framework.testcases.Login@32c52b]" name="BeforeMeth" is-config="true" duration-ms="6767" started-at="2020-04-04T17:10:26 IST" finished-at="2020-04-04T17:10:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://leaftaps.com/opentaps/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMeth -->
        <test-method status="FAIL" signature="executeCreateLead(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:framework.testcases.Login@32c52b]" name="executeCreateLead" duration-ms="6" started-at="2020-04-04T17:10:33 IST" data-provider="getData" finished-at="2020-04-04T17:10:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[DemoCSR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[crmsfa]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[TestLeaf]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Raju]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ewrwe]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at framework.pages.LoginPage.enterUsername(LoginPage.java:15)
at framework.testcases.Login.executeCreateLead(Login.java:20)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeCreateLead -->
        <test-method status="PASS" signature="AfterMeth()[pri:0, instance:framework.testcases.Login@32c52b]" name="AfterMeth" is-config="true" duration-ms="2167" started-at="2020-04-04T17:10:33 IST" finished-at="2020-04-04T17:10:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMeth -->
      </class> <!-- framework.testcases.Login -->
      <class name="framework.testcases.CreateLead">
        <test-method status="PASS" signature="createprop()[pri:0, instance:framework.testcases.CreateLead@17e1b0c]" name="createprop" is-config="true" duration-ms="17" started-at="2020-04-04T17:10:01 IST" finished-at="2020-04-04T17:10:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createprop -->
        <test-method status="PASS" signature="getExcelName()[pri:0, instance:framework.testcases.CreateLead@17e1b0c]" name="getExcelName" is-config="true" duration-ms="1" started-at="2020-04-04T17:10:01 IST" finished-at="2020-04-04T17:10:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getExcelName -->
        <test-method status="PASS" signature="BeforeMeth(java.lang.String)[pri:0, instance:framework.testcases.CreateLead@17e1b0c]" name="BeforeMeth" is-config="true" duration-ms="7212" started-at="2020-04-04T17:10:02 IST" finished-at="2020-04-04T17:10:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://leaftaps.com/opentaps/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMeth -->
        <test-method status="FAIL" signature="executeCreateLead(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:framework.testcases.CreateLead@17e1b0c]" name="executeCreateLead" duration-ms="12" started-at="2020-04-04T17:10:09 IST" data-provider="getData" finished-at="2020-04-04T17:10:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[DemoCSR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[crmsfa]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[TestLeaf]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sarath]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Ms]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at framework.pages.LoginPage.enterUsername(LoginPage.java:15)
at framework.testcases.CreateLead.executeCreateLead(CreateLead.java:20)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeCreateLead -->
        <test-method status="PASS" signature="AfterMeth()[pri:0, instance:framework.testcases.CreateLead@17e1b0c]" name="AfterMeth" is-config="true" duration-ms="242" started-at="2020-04-04T17:10:09 IST" finished-at="2020-04-04T17:10:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMeth -->
        <test-method status="PASS" signature="BeforeMeth(java.lang.String)[pri:0, instance:framework.testcases.CreateLead@17e1b0c]" name="BeforeMeth" is-config="true" duration-ms="8724" started-at="2020-04-04T17:10:10 IST" finished-at="2020-04-04T17:10:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://leaftaps.com/opentaps/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMeth -->
        <test-method status="FAIL" signature="executeCreateLead(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:framework.testcases.CreateLead@17e1b0c]" name="executeCreateLead" duration-ms="3" started-at="2020-04-04T17:10:18 IST" data-provider="getData" finished-at="2020-04-04T17:10:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[DemoCSR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[crmsfa]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[TestLeaf]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Raju]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ewrwe]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at framework.pages.LoginPage.enterUsername(LoginPage.java:15)
at framework.testcases.CreateLead.executeCreateLead(CreateLead.java:20)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeCreateLead -->
        <test-method status="PASS" signature="AfterMeth()[pri:0, instance:framework.testcases.CreateLead@17e1b0c]" name="AfterMeth" is-config="true" duration-ms="364" started-at="2020-04-04T17:10:18 IST" finished-at="2020-04-04T17:10:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMeth -->
      </class> <!-- framework.testcases.CreateLead -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
